/**
 * ============================================
 * üìÅ Inventory.js - Component ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤ (‡πÄ‡∏°‡∏•‡πá‡∏î‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï)
 * ============================================
 * 
 * ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï
 * 
 * ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏±‡∏Å:
 * 1. ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô seedInventory
 * 2. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô produceInventory
 * 3. ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏•‡πá‡∏î (selectSeed/clearSelectedSeed)
 * 4. ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà (selectedSeed)
 * 5. ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏•‡πá‡∏î
 * 
 * ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á:
 * - App.js: ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô /farm route (Sidebar) ‡πÅ‡∏•‡∏∞ /inventory route (‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠)
 * - farmSlice.js: ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ selectSeed ‡πÅ‡∏•‡∏∞ clearSelectedSeed actions
 * - crops.js: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡∏ä (icon, name) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á
 * - sound.js: ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏•‡πá‡∏î
 * 
 * Redux State ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ:
 * - seedInventory: ‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤ (object: { cropId: count })
 * - produceInventory: ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤ (object: { cropId: count })
 * - selectedSeed: ‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà (string ‡∏´‡∏£‡∏∑‡∏≠ null)
 */

import React from "react";
import PropTypes from 'prop-types';
import { useSelector, useDispatch } from 'react-redux'; // üîó Redux Hooks: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞ Dispatch Actions
import { CROPS_DATA } from '../data/crops.js'; // üîó ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡∏ä‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
import { clearSelectedSeed, selectSeed } from '../state/farmSlice.js'; // üîó Redux Actions: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏°‡∏•‡πá‡∏î
import { playPick } from '../utils/sound.js'; // üîó ‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå

/**
 * Inventory: Component ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤
 * 
 * ‡πÅ‡∏™‡∏î‡∏á 2 ‡∏™‡πà‡∏ß‡∏ô:
 * 1. ‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå: ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î, ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏î‡πâ
 * 2. ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï: ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏≠‡πà‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
 */
function Inventory() {
  // üîó Redux: Dispatch Actions
  const dispatch = useDispatch();
  
  // üîó Redux: ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Store
  const produceInventory = useSelector((state) => state.farm.produceInventory || {}); // ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï
  const seedInventory = useSelector((state) => state.farm.seedInventory || {}); // ‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå
  const selectedSeed = useSelector((state) => state.farm.selectedSeed); // ‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà
  
  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  const totalSeeds = Object.values(seedInventory).reduce((sum, count) => sum + count, 0);
  const totalProduce = Object.values(produceInventory).reduce((sum, count) => sum + count, 0);
  
  /**
   * handleSeedClick: ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏°‡∏•‡πá‡∏î
   * 
   * Flow:
   * 1. ‡∏ñ‡πâ‡∏≤‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà ‚Üí ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (clearSelectedSeed)
   * 2. ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏°‡∏•‡πá‡∏î‡∏≠‡∏∑‡πà‡∏ô ‚Üí ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ô‡∏±‡πâ‡∏ô (selectSeed)
   * 3. ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏•‡πá‡∏î
   * 
   * @param {string} cropId - ID ‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏•‡πá‡∏î (‡πÄ‡∏ä‡πà‡∏ô 'tomato')
   * 
   * üîó Redux Actions: selectSeed, clearSelectedSeed
   */
  const handleSeedClick = (cropId) => {
    if (selectedSeed === cropId) {
      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏•‡∏¥‡∏Å‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà ‚Üí ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      dispatch(clearSelectedSeed()); // üîó Redux Action: ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    } else {
      // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏°‡∏•‡πá‡∏î‡∏≠‡∏∑‡πà‡∏ô ‚Üí ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ô‡∏±‡πâ‡∏ô
      dispatch(selectSeed(cropId)); // üîó Redux Action: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏•‡πá‡∏î
      playPick(); // üîó ‡πÄ‡∏™‡∏µ‡∏¢‡∏á: ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏•‡πá‡∏î
    }
  };

  return (
    <div className="inventory">
      {/* Header: ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */}
      <div style={{display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginBottom: '20px'}}>
        <h2>üéí ‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤</h2>
        <div style={{fontSize: '12px', color: '#64748b', background: 'rgba(0,0,0,0.05)', padding: '4px 8px', borderRadius: '12px'}}>
          {totalSeeds + totalProduce} ‡∏ä‡∏¥‡πâ‡∏ô
        </div>
      </div>
      
      {/* ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà */}
      {selectedSeed && (
        <div style={{background: 'linear-gradient(135deg, #fef3c7 0%, #fde68a 100%)', padding: '12px', borderRadius: '12px', marginBottom: '15px', border: '2px solid #fbbf24'}}>
          <div style={{fontSize: '12px', color: '#78350f', marginBottom: '5px'}}>
            <strong>üå± ‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</strong>
          </div>
          {/* ‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏•‡πá‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å */}
          <div style={{fontSize: '16px', fontWeight: 'bold', color: '#92400e', display: 'flex', alignItems: 'center', gap: '8px'}}>
            <span style={{fontSize: '24px'}}>{CROPS_DATA[selectedSeed].icon}</span>
            {CROPS_DATA[selectedSeed].name}
          </div>
          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å */}
          <button onClick={() => dispatch(clearSelectedSeed())} style={{marginTop: '8px', padding: '4px 12px', background: '#f59e0b', color: 'white', border: 'none', borderRadius: '6px', fontSize: '12px', cursor: 'pointer', fontWeight: '600'}}>
            ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
          </button>
        </div>
      )}

      {/* ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå */}
      <div style={{marginBottom: '20px'}}>
        <h3 style={{fontSize: '15px', marginBottom: '10px', color: '#075985', display: 'flex', alignItems: 'center', gap: '8px'}}>
          üå± ‡πÄ‡∏°‡∏•‡πá‡∏î‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå
          <span style={{fontSize: '12px', color: '#64748b', marginLeft: 'auto'}}>({totalSeeds})</span>
        </h3>
        <div style={{display: 'grid', gap: '8px'}}>
          {/* ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏•‡πá‡∏î ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏•‡πá‡∏î" */}
          {Object.keys(seedInventory).length === 0 ? (
            <div style={{padding: '16px', textAlign: 'center', color: '#94a3b8', fontSize: '14px', background: '#f1f5f9', borderRadius: '8px', border: '2px dashed #cbd5e1'}}>
              <div style={{fontSize: '32px', marginBottom: '4px'}}>üå±</div>
              <div>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏•‡πá‡∏î</div>
            </div>
          ) : (
            // Map ‡∏ú‡πà‡∏≤‡∏ô seedInventory ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏•‡πá‡∏î‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏ô‡∏¥‡∏î
            Object.entries(seedInventory).map(([id, count]) => (
              <div 
                key={id} 
                onClick={() => handleSeedClick(id)} // üîó ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÄ‡∏°‡∏•‡πá‡∏î
                style={{
                  display: 'flex', 
                  alignItems: 'center', 
                  gap: '12px', 
                  padding: '10px 12px', 
                  borderRadius: '10px', 
                  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà ‚Üí ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß, ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å ‚Üí ‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß
                  background: selectedSeed === id ? 'linear-gradient(135deg, #dcfce7 0%, #bbf7d0 100%)' : 'white', 
                  border: selectedSeed === id ? '2px solid #22c55e' : '2px solid #e2e8f0', 
                  cursor: 'pointer', 
                  transition: 'all 0.2s', 
                  transform: selectedSeed === id ? 'scale(1.02)' : 'scale(1)', 
                  boxShadow: selectedSeed === id ? '0 4px 8px rgba(34, 197, 94, 0.2)' : '0 1px 3px rgba(0,0,0,0.1)'
                }}
              >
                {/* ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏°‡∏•‡πá‡∏î */}
                <div style={{fontSize: '28px'}}>{CROPS_DATA[id].icon}</div>
                <div style={{flex: 1}}>
                  {/* ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏•‡πá‡∏î */}
                  <div style={{fontWeight: '600', fontSize: '14px', color: '#1e293b'}}>{CROPS_DATA[id].name}</div>
                  {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏°‡∏•‡πá‡∏î */}
                  <div style={{fontSize: '11px', color: '#64748b'}}>{count} ‡πÄ‡∏°‡∏•‡πá‡∏î</div>
                </div>
                {/* ‡∏ñ‡πâ‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏¢‡∏π‡πà ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢ ‚úì */}
                {selectedSeed === id && (
                  <div style={{background: '#22c55e', color: 'white', borderRadius: '50%', width: '24px', height: '24px', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: '14px', fontWeight: 'bold'}}>‚úì</div>
                )}
              </div>
            ))
          )}
        </div>
      </div>

      {/* ‡∏™‡πà‡∏ß‡∏ô‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï */}
      <div>
        <h3 style={{fontSize: '15px', marginBottom: '10px', color: '#075985', display: 'flex', alignItems: 'center', gap: '8px'}}>
          üì¶ ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï
          <span style={{fontSize: '12px', color: '#64748b', marginLeft: 'auto'}}>({totalProduce})</span>
        </h3>
        <div style={{display: 'grid', gap: '8px'}}>
          {/* ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï ‚Üí ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï" */}
          {Object.keys(produceInventory).length === 0 ? (
            <div style={{padding: '16px', textAlign: 'center', color: '#94a3b8', fontSize: '14px', background: '#f1f5f9', borderRadius: '8px', border: '2px dashed #cbd5e1'}}>
              <div style={{fontSize: '32px', marginBottom: '4px'}}>üì¶</div>
              <div>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï</div>
            </div>
          ) : (
            // Map ‡∏ú‡πà‡∏≤‡∏ô produceInventory ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏ô‡∏¥‡∏î
            Object.entries(produceInventory).map(([id, count]) => (
              <div 
                key={id} 
                style={{
                  display: 'flex', 
                  alignItems: 'center', 
                  gap: '12px', 
                  padding: '10px 12px', 
                  borderRadius: '10px', 
                  background: 'linear-gradient(135deg, #fff7ed 0%, #ffedd5 100%)', 
                  border: '2px solid #fed7aa', 
                  boxShadow: '0 1px 3px rgba(0,0,0,0.1)'
                }}
              >
                {/* ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï */}
                <div style={{fontSize: '28px'}}>{CROPS_DATA[id].icon}</div>
                <div style={{flex: 1}}>
                  {/* ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï */}
                  <div style={{fontWeight: '600', fontSize: '14px', color: '#1e293b'}}>{CROPS_DATA[id].name}</div>
                  {/* ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏•‡∏ú‡∏•‡∏¥‡∏ï */}
                  <div style={{fontSize: '11px', color: '#64748b'}}>{count} ‡∏ä‡∏¥‡πâ‡∏ô</div>
                </div>
                {/* ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô x count */}
                <div style={{background: '#fb923c', color: 'white', borderRadius: '6px', padding: '4px 8px', fontSize: '12px', fontWeight: 'bold'}}>x{count}</div>
              </div>
            ))
          )}
        </div>
      </div>
    </div>
  );
}

// PropTypes validation
Inventory.propTypes = {
  // Component ‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏£‡∏±‡∏ö props ‡πÅ‡∏ï‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î PropTypes ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à
};

export default Inventory;
